// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { z } from 'zod';

/** Identifier type for public.users */
export type UsersId = string & { __brand: 'UsersId' };

/** Represents the table public.users */
export default interface Users {
  id: UsersId;

  email: string;

  name: string;

  googleId: string;

  picture: string;
}

/** Represents the initializer for the table public.users */
export interface UsersInitializer {
  /** Default value: gen_random_uuid() */
  id?: UsersId;

  email: string;

  name: string;

  googleId: string;

  picture: string;
}

/** Represents the mutator for the table public.users */
export interface UsersMutator {
  id?: UsersId;

  email?: string;

  name?: string;

  googleId?: string;

  picture?: string;
}

export const usersId = z.string() as unknown as z.Schema<UsersId>;

export const users = z.object({
  id: usersId,
  email: z.string(),
  name: z.string(),
  googleId: z.string(),
  picture: z.string(),
}) as unknown as z.Schema<Users>;

export const usersInitializer = z.object({
  id: usersId.optional(),
  email: z.string(),
  name: z.string(),
  googleId: z.string(),
  picture: z.string(),
}) as unknown as z.Schema<UsersInitializer>;

export const usersMutator = z.object({
  id: usersId.optional(),
  email: z.string().optional(),
  name: z.string().optional(),
  googleId: z.string().optional(),
  picture: z.string().optional(),
}) as unknown as z.Schema<UsersMutator>;
